{"version":3,"sources":["App.module.scss","components/counter/counter.module.scss","components/legend/legend.module.scss","components/select/select.module.scss","components/button/button.module.scss","components/visualizer/visualizer.module.scss","components/block/block.module.scss","components/blockRow/blockRow.module.scss","components/link/link.module.scss","components/select/select.jsx","components/button/button.jsx","hooks/useInterval.js","utils/allocator.js","utils/parseTimelineString.js","components/visualizer/visualizer.jsx","constants/index.js","components/block/block.jsx","components/counter/counter.jsx","components/blockRow/blockRow.jsx","components/legend/legend.jsx","components/link/link.jsx","App.jsx","index.js"],"names":["module","exports","select","options","onChange","hasObjects","className","styles","map","option","key","value","label","Button","onClick","disabled","button","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Allocator","initialState","this","queue","x","currentState","Array","fill","history","finished","prototype","tick","newJob","shift","size","addFile","removeFile","snapshot","length","file","unaddedBlockCount","i","letter","Error","push","slice","getFragmentedFiles","previousBlock","allFiles","fragmentedFiles","currentBlock","find","e","count","includes","getFragmentationCountPercent","Math","round","getFragmentationSpacePercent","allFilesSize","reduce","acc","curr","fragmentedFileSize","parseTimelineString","timelineString","setError","split","item","index","match","processData","Number","err","message","Visualizer","processes","started","setStarted","error","useState","allocator","setAllocator","stepCount","setStepCount","step","visualizer","isIndexRow","values","keys","row","isErrorRow","fragmentationCountPercent","fragmentationSpacePercent","timelineOptions","colors","Block","isInvisible","isIndexBlock","isErrorBlock","classnames","block","style","background","indexOf","toString","toLowerCase","color","Counter","counter","number","BlockRow","blockRow","Legend","legend","legendItem","Link","link","href","App","timeline","setTimeline","setProcesses","scheduler","header","title","controls","target","customTimeline","onBlur","onKeyPress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8390cef0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduler\":\"App_scheduler__1vHEb\",\"header\":\"App_header__2L3DO\",\"controls\":\"App_controls__2MSL9\",\"timeline\":\"App_timeline__1jgvV\",\"customTimeline\":\"App_customTimeline__LuqHI\",\"error\":\"App_error__1LS0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"counter_counter__3ZU8z\",\"number\":\"counter_number__QGA_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"legend_legend__28fLd\",\"legendItem\":\"legend_legendItem__2j_9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__XlnEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visualizer\":\"visualizer_visualizer__IqrZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"block_block__2bW7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockRow\":\"blockRow_blockRow__2nC0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"link_link__24NwO\"};","import React from 'react';\n\nimport styles from './select.module.scss';\n\nconst select = ({ options = [], onChange }) => {\n  const hasObjects = typeof options[0] === 'object';\n\n  return (\n    <select onChange={onChange} className={styles.select}>\n      {options.map(option =>\n        hasObjects ? (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ) : (\n          <option key={option}>{option}</option>\n        )\n      )}\n    </select>\n  );\n};\n\nexport default select;\n","import React from 'react';\n\nimport styles from './button.module.scss';\n\nconst Button = ({ label, onClick, disabled }) => (\n  <button className={styles.button} disabled={disabled} onClick={onClick}>\n    {label}\n  </button>\n);\n\nexport default Button;\n","import { useEffect, useRef } from 'react';\n\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;","function Allocator(initialState) {\n  this.queue = initialState.map(x => x);\n  this.currentState = Array(50).fill(null);\n  this.history = [];\n  this.finished = false;\n}\n\nAllocator.prototype.tick = function() {\n  const newJob = this.queue.shift();\n\n  const isNewFile = newJob.size !== -1;\n\n  if (isNewFile) {\n    this.addFile(newJob);\n  } else {\n    this.removeFile(newJob);\n  }\n\n  this.snapshot();\n\n  if (this.queue.length === 0) this.finished = true;\n};\n\nAllocator.prototype.addFile = function(file) {\n  let unaddedBlockCount = file.size;\n\n  for (let i = 0; i < this.currentState.length; i++) {\n    if (this.currentState[i] === null) {\n      this.currentState[i] = file.letter;\n      unaddedBlockCount -= 1;\n      if (unaddedBlockCount === 0) break;\n    }\n  }\n  if (unaddedBlockCount > 0) {\n    throw new Error(`File ${file.letter} did not fit!`);\n  }\n};\n\nAllocator.prototype.removeFile = function(file) {\n  for (let i = 0; i < this.currentState.length; i++) {\n    if (this.currentState[i] === file.letter) {\n      this.currentState[i] = null;\n    }\n  }\n};\n\nAllocator.prototype.snapshot = function() {\n  this.history.push(this.currentState.slice());\n};\n\nAllocator.prototype.getFragmentedFiles = function() {\n  const allFiles = [];\n  const fragmentedFiles = [];\n\n  let previousBlock;\n\n  for (let i = 0; i < this.currentState.length; i++) {\n    const currentBlock = this.currentState[i];\n\n    if (currentBlock) {\n      if (allFiles.find(e => e.letter === currentBlock)) {\n        allFiles.find(e => e.letter === currentBlock).count++;\n        if (\n          previousBlock !== currentBlock &&\n          !fragmentedFiles.includes(currentBlock)\n        ) {\n          fragmentedFiles.push({ letter: currentBlock });\n        }\n      } else {\n        allFiles.push({ letter: currentBlock, count: 1 });\n      }\n    }\n\n    previousBlock = currentBlock;\n  }\n  return {\n    allFiles,\n    fragmentedFiles\n  };\n};\n\nAllocator.prototype.getFragmentationCountPercent = function() {\n  const { allFiles, fragmentedFiles } = this.getFragmentedFiles();\n\n  return Math.round((fragmentedFiles.length / allFiles.length) * 10000) / 100;\n};\n\nAllocator.prototype.getFragmentationSpacePercent = function() {\n  const { allFiles, fragmentedFiles } = this.getFragmentedFiles();\n\n  const allFilesSize = allFiles.reduce((acc, curr) => acc + curr.count, 0);\n  const fragmentedFileSize = fragmentedFiles.reduce((acc, curr) => {\n    const fileSize = allFiles.find(file => file.letter === curr.letter).count;\n    return acc + fileSize;\n  }, 0);\n\n  return Math.round((fragmentedFileSize / allFilesSize) * 10000) / 100;\n};\n\nexport default Allocator;\n","const parseTimelineString = (timelineString, setError) => {\n  try {\n    setError('');\n\n    const processStrings = timelineString.split(';');\n    return processStrings.map((item, index) => {\n      if (!item.match(/^[A-Z],(-|[0-9]+)$/)) {\n        throw new Error(`Invalid pattern!`);\n      }\n      const processData = item.split(',');\n\n      const letter = processData[0];\n      const size = processData[1];\n\n      return {\n        letter,\n        size: size === '-' ? -1 : Number(size),\n        index\n      };\n    });\n  } catch (err) {\n    setError(err.message);\n    return [];\n  }\n};\n\nexport default parseTimelineString;\n","import React, { useState, useEffect } from 'react';\n\nimport { useInterval } from '../../hooks';\nimport { Allocator } from '../../utils';\nimport { BlockRow, Counter } from '..';\n\nimport styles from './visualizer.module.scss';\n\nconst Visualizer = ({ processes, started, setStarted, setError, error }) => {\n  const [allocator, setAllocator] = useState(new Allocator(processes));\n  const [stepCount, setStepCount] = useState(0);\n\n  useInterval(\n    () => {\n      step();\n    },\n    started ? 1000 : null\n  );\n\n  useEffect(() => {\n    if (started) {\n      // Reset\n      setStepCount(0);\n      setError('');\n      setAllocator(new Allocator(processes));\n    }\n  }, [setError, started, processes]);\n\n  const step = () => {\n    try {\n      allocator.tick();\n    } catch (err) {\n      setError(err.message);\n      setStarted(false);\n    }\n\n    // increment step count\n    setStepCount(stepCount + 1);\n\n    if (allocator.finished) setStarted(false);\n  };\n\n  return (\n    <div className={styles.visualizer}>\n      <BlockRow isIndexRow values={[...Array(50).keys()].map(x => ++x)} />\n      {allocator.history.map((row, index) => (\n        <BlockRow key={index} values={row} />\n      ))}\n      {error === 'Not enough space' && (\n        <BlockRow isErrorRow values={Array(50).fill(null)} />\n      )}\n\n      <Counter\n        stepCount={stepCount}\n        finished={allocator.finished}\n        fragmentationCountPercent={allocator.getFragmentationCountPercent()}\n        fragmentationSpacePercent={allocator.getFragmentationSpacePercent()}\n      />\n    </div>\n  );\n};\n\nexport default Visualizer;\n","export const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\nexport const timelineOptions = [\n  'A,2;B,3;A,-;C,4;D,5;B,-;E,15',\n  'A,4;B,3;C,6;D,5;B,-;E,5;A,-;F,10',\n  'A,2;B,3;C,4;D,5;B,-;E,7;D,-;F,10;A,-;G,1;H,1;G,-;I,10;J,8;I,-',\n  'custom'\n];\n\nexport const colors = [\n  '#e6194b',\n  '#3cb44b',\n  '#ffe119',\n  '#4363d8',\n  '#f58231',\n  '#911eb4',\n  '#46f0f0',\n  '#f032e6',\n  '#bcf60c',\n  '#fabebe',\n  '#008080',\n  '#e6beff',\n  '#9a6324',\n  '#fffac8',\n  '#800000',\n  '#aaffc3',\n  '#808000',\n  '#ffd8b1',\n  '#000075',\n  '#808080'\n];\n","import React from 'react';\nimport classnames from 'classnames';\nimport { colors, alphabet } from '../../constants';\n\nimport styles from './block.module.scss';\n\nconst Block = ({ isInvisible, value, isIndexBlock, isErrorBlock }) => (\n  <div\n    className={classnames(styles.block)}\n    style={{\n      background:\n        isInvisible || isIndexBlock || !value\n          ? 'transparent'\n          : colors[alphabet.indexOf(value.toString().toLowerCase())],\n      color: isErrorBlock ? 'red' : 'white'\n    }}\n  >\n    {isIndexBlock ? `${value}` : isErrorBlock ? 'x' : null}\n  </div>\n);\n\nexport default Block;\n","import React from 'react';\n\nimport styles from './counter.module.scss';\n\nconst Counter = ({\n  stepCount,\n  finished,\n  fragmentationCountPercent,\n  fragmentationSpacePercent\n}) => (\n  <div className={styles.counter}>\n    {finished && (\n      <>\n        <div>\n          <span className={styles.number}>{fragmentationCountPercent}</span> %\n          of files are currently fragmented.\n        </div>\n        <div>\n          <span className={styles.number}>{fragmentationSpacePercent}</span> %\n          of consumed space is consumed by fragmented files.\n        </div>\n      </>\n    )}\n    <div>\n      tick count: <span className={styles.number}>{stepCount}</span>\n    </div>\n  </div>\n);\n\nexport default Counter;\n","import React from 'react';\n\nimport { Block } from '..';\n\nimport styles from './blockRow.module.scss';\n\nconst BlockRow = ({values, isIndexRow, isErrorRow}) => {\n    return <div className={styles.blockRow}>\n        {values.map((value, index) => <Block isErrorBlock={isErrorRow} key={index} value={value} isIndexBlock={isIndexRow} />)}\n    </div>\n}\n\nexport default BlockRow;","import React from 'react';\n\nimport { Block } from '..';\n\nimport styles from './legend.module.scss';\n\nconst Legend = ({ processes }) =>\n  processes ? (\n    <div className={styles.legend}>\n      <div className={styles.legendItem}>\n        <Block isInvisible />\n        <div>File</div>\n        <div>Size</div>\n      </div>\n      {processes.map(\n        item =>\n          item.size !== -1 && (\n            <div key={item.index} className={styles.legendItem}>\n              <Block value={item.letter} />\n              <div>{item.letter}</div>\n              <div>{item.size}</div>\n            </div>\n          )\n      )}\n    </div>\n  ) : null;\n\nexport default Legend;\n","import React from 'react';\n\nimport styles from './link.module.scss';\n\nconst Link = () => (\n  <div className={styles.link}>\n    <a href=\"https://ottmartens.github.io/cpu-algorithms/\">CPU Scheduler</a>\n    <a href=\"https://ottmartens.github.io/ram-algorithms/\">RAM Scheduler</a>\n    <a href=\"https://ottmartens.github.io/disk-algorithms/\">Disk Scheduler</a>\n  </div>\n);\n\nexport default Link;","import React, { useState, useEffect } from 'react';\n\nimport { Select, Button, Visualizer, Legend, Link } from './components';\nimport { timelineOptions } from './constants';\nimport { parseTimelineString } from './utils';\n\nimport styles from './App.module.scss';\n\nconst App = () => {\n  const [timeline, setTimeline] = useState(timelineOptions[0]);\n  const [started, setStarted] = useState(false);\n  const [processes, setProcesses] = useState([]);\n\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (timeline !== 'custom') {\n      setProcesses(parseTimelineString(timeline, setError));\n    }\n  }, [timeline]);\n\n  return (\n    <div className={styles.scheduler}>\n      <Link />\n      <header className={styles.header}>\n        <h1 className={styles.title}>File allocation</h1>\n        <div className={styles.controls}>\n          <div className={styles.timeline}>\n            <h3>File queue</h3>\n            <Select\n              options={timelineOptions}\n              onChange={({ target: { value } }) => {\n                setTimeline(value);\n                setStarted(false);\n              }}\n            />\n            {timeline === 'custom' && (\n              <input\n                className={styles.customTimeline}\n                onBlur={e => {\n                  setProcesses(parseTimelineString(e.target.value, setError));\n                }}\n                onKeyPress={e => {\n                  if (e.key === 'Enter') {\n                    setProcesses(parseTimelineString(e.target.value, setError));\n                  }\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <Button\n          disabled={error === 'Invalid pattern!'}\n          label={started ? 'STOP' : 'START'}\n          onClick={() => {\n            if (started) {\n              setStarted(false);\n            } else {\n              setStarted(true);\n            }\n          }}\n        />\n        {error && <span className={styles.error}>{error}</span>}\n      </header>\n      <Legend processes={processes} />\n      <Visualizer\n        processes={processes}\n        started={started}\n        setStarted={setStarted}\n        setError={setError}\n        error={error}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}